[{"/Users/matthewharrison/Desktop/trader-app/src/index.js":"1","/Users/matthewharrison/Desktop/trader-app/src/App.js":"2","/Users/matthewharrison/Desktop/trader-app/src/reportWebVitals.js":"3","/Users/matthewharrison/Desktop/trader-app/src/components/stats/stats.js":"4","/Users/matthewharrison/Desktop/trader-app/src/components/newsfeed/newsfeed.js":"5","/Users/matthewharrison/Desktop/trader-app/src/components/header/header.js":"6","/Users/matthewharrison/Desktop/trader-app/src/components/statsrow/stats-row.js":"7","/Users/matthewharrison/Desktop/trader-app/src/components/linegraph/linegraph.js":"8","/Users/matthewharrison/Desktop/trader-app/src/components/timeline/timeline.js":"9","/Users/matthewharrison/Desktop/trader-app/src/firebase/firebase.js":"10"},{"size":500,"mtime":1635699228488,"results":"11","hashOfConfig":"12"},{"size":477,"mtime":1635699228482,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1635699228488,"results":"14","hashOfConfig":"12"},{"size":3003,"mtime":1635699228485,"results":"15","hashOfConfig":"12"},{"size":2197,"mtime":1635699228484,"results":"16","hashOfConfig":"12"},{"size":898,"mtime":1635700571039,"results":"17","hashOfConfig":"12"},{"size":1586,"mtime":1635699228486,"results":"18","hashOfConfig":"12"},{"size":1952,"mtime":1635699228484,"results":"19","hashOfConfig":"12"},{"size":702,"mtime":1635699228487,"results":"20","hashOfConfig":"12"},{"size":538,"mtime":1635700314628,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"9eer8f",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/matthewharrison/Desktop/trader-app/src/index.js",[],["45","46"],"/Users/matthewharrison/Desktop/trader-app/src/App.js",[],"/Users/matthewharrison/Desktop/trader-app/src/reportWebVitals.js",[],"/Users/matthewharrison/Desktop/trader-app/src/components/stats/stats.js",["47","48","49"],"import React, { useState, useEffect } from \"react\";\nimport \"./stats.css\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\n//import { key } from \"../../api/api\";\nimport axios from \"axios\";\nimport { db } from \"../../firebase/firebase\";\nimport StatsRow from \"../statsrow/stats-row\";\n\nconst BASE_URL = \"https://finnhub.io/api/v1/quote\";\nconst TOKEN = `c0dm5pv48v6sgrj39lug`;\n\n\n//const testData = []; \n\nfunction Stats() {\n  const [stocksData, setStocksData] = useState([]);\n  const [myStocks, setMyStocks] = useState([]);\n\n  const getMyStocks = () => {\n    db\n    .collection('myStocks')\n    .onSnapshot(snapshot => {\n      //console.log(snapshot)\n        let promises = [];\n        let tempData = []\n        \n        snapshot.docs.map((doc) => {\n //         console.log(doc.data());\n         promises.push(getStocksData(doc.data().ticker)\n          .then(res => {\n            tempData.push({\n              id: doc.id,\n              data: doc.data(),\n              info: res.data\n            })\n          })\n        )})\n        Promise.all(promises).then(()=>{\n          console.log(tempData)\n          setMyStocks(tempData);\n        })\n    })\n  }\n\n  const getStocksData = (stock) => {\n    return axios\n      .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\n      .catch((error) => {\n        console.error(\"Error\", error.message);\n      });\n  };\n\n  useEffect(() => {\n    let tempStocksData = []\n    const stocksList = [\"AAPL\", \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\n\n//    getMyStocks();\n    let promises = [];\n    getMyStocks()\n    stocksList.map((stock) => {\n      promises.push(\n        getStocksData(stock)\n        .then((res) => {\n          tempStocksData.push({\n            name: stock,\n            ...res.data\n          });\n        })\n      )\n    });\n\n    Promise.all(promises).then(()=>{\n  //   console.log(tempStocksData);\n      setStocksData(tempStocksData);\n    })\n  },[]);\n//, []\n  return (\n    <div className=\"stats\">\n      <div className=\"stats__container\">\n        <div className=\"stats__header\">\n          <p> Stocks</p>\n          <MoreHorizIcon />\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n            {myStocks.map((stock) => (\n              <StatsRow\n                key={stock.data.ticker}\n                name={stock.data.ticker}\n                openPrice={stock.info.o}\n                shares={stock.data.shares}\n                price={stock.info.c}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"stats__header stats-lists\">\n          <p>Lists</p>\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n            {stocksData.map((stock) => (\n              <StatsRow\n                key={stock.name}\n                name={stock.name}\n                openPrice={stock.o}\n                price={stock.c}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Stats;","/Users/matthewharrison/Desktop/trader-app/src/components/newsfeed/newsfeed.js",["50","51"],"import React, { useState, useEffect } from \"react\";\nimport \"./newsfeed.css\";\n//import Article from \"./Article\";\nimport { Avatar } from \"@material-ui/core\";\n//import MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n//import FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport Chip from '@material-ui/core/Chip';\nimport TimeLine from \"../timeline/timeline\";\nimport LineGraph from \"../linegraph/linegraph\";\n\n\nfunction NewsFeed() {\n  const [popularTopics, setTopics] = useState([\n    \"Technology\",\n    \"Top Movers\",\n    \"Upcoming Earnings\",\n    \"Crypto\",\n    \"Cannabis\",\n    \"Healthcare Supplies\",\n    \"Index ETFs\",\n    \"Technology\",\n    \"China\",\n    \"Pharma\",\n  ]);\n\n  const [seed, setSeed] = useState(\"\");\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  return (\n    <div className=\"newsfeed\">\n      <div className=\"newsfeed__container\">\n        <div className=\"newsfeed__chart__section\">\n          <div className=\"newsfeed_price_asset\">\n            <h1> $114,656,84</h1>\n            <p> $142.90 (-0,12) Today </p>\n          </div>\n          <div className=\"newsfeed__chart\">\n            <LineGraph />\n            <TimeLine />\n          </div>\n        </div>\n        <div className=\"newsfeed__buying__section\">\n          <h2> Buying Power</h2>\n          <h2> $4.11</h2>\n        </div>\n        <div className=\"newsfeed__market__section\">\n          <div className=\"newsfeed__market__box\">\n            <p>Markets Open</p>\n            <h1>Free Tendies</h1>\n          </div>\n        </div>\n        <div className=\"newsfeed__popularlists__section\">\n          <div className=\"newsfeed__popularlists__intro\">\n            <h1>Popular lists</h1>\n            <p>Show More</p>\n          </div>\n          <div className=\"newsfeed_popularlists_badges\">\n            {popularTopics.map((topic) => (\n              <Chip \n                className=\"topic__badge\"\n                variant=\"outlined\"\n                label={topic}\n                avatar={<Avatar\n                  src={`https://avatars.dicebear.com/api/human/${topic}.svg`}\n                />} \n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NewsFeed;","/Users/matthewharrison/Desktop/trader-app/src/components/header/header.js",[],"/Users/matthewharrison/Desktop/trader-app/src/components/statsrow/stats-row.js",[],"/Users/matthewharrison/Desktop/trader-app/src/components/linegraph/linegraph.js",[],"/Users/matthewharrison/Desktop/trader-app/src/components/timeline/timeline.js",[],"/Users/matthewharrison/Desktop/trader-app/src/firebase/firebase.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":28,"column":33,"nodeType":"58","messageId":"59","endLine":28,"endColumn":35},{"ruleId":"56","severity":1,"message":"57","line":61,"column":28,"nodeType":"58","messageId":"59","endLine":61,"endColumn":30},{"ruleId":"60","severity":1,"message":"61","line":77,"column":5,"nodeType":"62","endLine":77,"endColumn":7,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":13,"column":25,"nodeType":"66","messageId":"67","endLine":13,"endColumn":34},{"ruleId":"64","severity":1,"message":"68","line":26,"column":10,"nodeType":"66","messageId":"67","endLine":26,"endColumn":14},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-unused-vars","'setTopics' is assigned a value but never used.","Identifier","unusedVar","'seed' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [getMyStocks]",{"range":"74","text":"75"},[1903,1905],"[getMyStocks]"]