[{"/Users/matthewharrison/Desktop/dev-projects/trader-app/src/index.js":"1","/Users/matthewharrison/Desktop/dev-projects/trader-app/src/App.js":"2","/Users/matthewharrison/Desktop/dev-projects/trader-app/src/reportWebVitals.js":"3","/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/header/header.js":"4","/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/stats/stats.js":"5","/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/newsfeed/newsfeed.js":"6","/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/linegraph/linegraph.js":"7","/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/timeline/timeline.js":"8","/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/statsrow/stats-row.js":"9","/Users/matthewharrison/Desktop/dev-projects/trader-app/src/firebase/firebase.js":"10"},{"size":500,"mtime":1612499539000,"results":"11","hashOfConfig":"12"},{"size":477,"mtime":1612477925000,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1612339472000,"results":"14","hashOfConfig":"12"},{"size":898,"mtime":1612508010000,"results":"15","hashOfConfig":"12"},{"size":3003,"mtime":1612503448000,"results":"16","hashOfConfig":"12"},{"size":2197,"mtime":1612509606000,"results":"17","hashOfConfig":"12"},{"size":1952,"mtime":1612504786000,"results":"18","hashOfConfig":"12"},{"size":702,"mtime":1612428128000,"results":"19","hashOfConfig":"12"},{"size":1586,"mtime":1612504786000,"results":"20","hashOfConfig":"12"},{"size":465,"mtime":1612428129000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"brl0t1",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/matthewharrison/Desktop/dev-projects/trader-app/src/index.js",[],"/Users/matthewharrison/Desktop/dev-projects/trader-app/src/App.js",[],["44","45"],"/Users/matthewharrison/Desktop/dev-projects/trader-app/src/reportWebVitals.js",[],"/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/header/header.js",[],"/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/stats/stats.js",["46","47","48"],"import React, { useState, useEffect } from \"react\";\nimport \"./stats.css\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\n//import { key } from \"../../api/api\";\nimport axios from \"axios\";\nimport { db } from \"../../firebase/firebase\";\nimport StatsRow from \"../statsrow/stats-row\";\n\nconst BASE_URL = \"https://finnhub.io/api/v1/quote\";\nconst TOKEN = `c0dm5pv48v6sgrj39lug`;\n\n\n//const testData = []; \n\nfunction Stats() {\n  const [stocksData, setStocksData] = useState([]);\n  const [myStocks, setMyStocks] = useState([]);\n\n  const getMyStocks = () => {\n    db\n    .collection('myStocks')\n    .onSnapshot(snapshot => {\n      //console.log(snapshot)\n        let promises = [];\n        let tempData = []\n        \n        snapshot.docs.map((doc) => {\n //         console.log(doc.data());\n         promises.push(getStocksData(doc.data().ticker)\n          .then(res => {\n            tempData.push({\n              id: doc.id,\n              data: doc.data(),\n              info: res.data\n            })\n          })\n        )})\n        Promise.all(promises).then(()=>{\n          console.log(tempData)\n          setMyStocks(tempData);\n        })\n    })\n  }\n\n  const getStocksData = (stock) => {\n    return axios\n      .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\n      .catch((error) => {\n        console.error(\"Error\", error.message);\n      });\n  };\n\n  useEffect(() => {\n    let tempStocksData = []\n    const stocksList = [\"AAPL\", \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\n\n//    getMyStocks();\n    let promises = [];\n    getMyStocks()\n    stocksList.map((stock) => {\n      promises.push(\n        getStocksData(stock)\n        .then((res) => {\n          tempStocksData.push({\n            name: stock,\n            ...res.data\n          });\n        })\n      )\n    });\n\n    Promise.all(promises).then(()=>{\n  //   console.log(tempStocksData);\n      setStocksData(tempStocksData);\n    })\n  },[]);\n//, []\n  return (\n    <div className=\"stats\">\n      <div className=\"stats__container\">\n        <div className=\"stats__header\">\n          <p> Stocks</p>\n          <MoreHorizIcon />\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n            {myStocks.map((stock) => (\n              <StatsRow\n                key={stock.data.ticker}\n                name={stock.data.ticker}\n                openPrice={stock.info.o}\n                shares={stock.data.shares}\n                price={stock.info.c}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"stats__header stats-lists\">\n          <p>Lists</p>\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n            {stocksData.map((stock) => (\n              <StatsRow\n                key={stock.name}\n                name={stock.name}\n                openPrice={stock.o}\n                price={stock.c}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Stats;","/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/newsfeed/newsfeed.js",["49","50"],"/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/linegraph/linegraph.js",[],"/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/timeline/timeline.js",[],"/Users/matthewharrison/Desktop/dev-projects/trader-app/src/components/statsrow/stats-row.js",[],"/Users/matthewharrison/Desktop/dev-projects/trader-app/src/firebase/firebase.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":28,"column":33,"nodeType":"57","messageId":"58","endLine":28,"endColumn":35},{"ruleId":"55","severity":1,"message":"56","line":61,"column":28,"nodeType":"57","messageId":"58","endLine":61,"endColumn":30},{"ruleId":"59","severity":1,"message":"60","line":77,"column":5,"nodeType":"61","endLine":77,"endColumn":7,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":13,"column":25,"nodeType":"65","messageId":"66","endLine":13,"endColumn":34},{"ruleId":"63","severity":1,"message":"67","line":26,"column":10,"nodeType":"65","messageId":"66","endLine":26,"endColumn":14},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-unused-vars","'setTopics' is assigned a value but never used.","Identifier","unusedVar","'seed' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [getMyStocks]",{"range":"73","text":"74"},[1903,1905],"[getMyStocks]"]